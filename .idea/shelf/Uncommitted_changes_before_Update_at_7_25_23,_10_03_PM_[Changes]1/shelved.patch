Index: .circleci/config.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>version: 2\njobs:\n  build:\n    docker:\n      # Specify the version you desire here\n      - image: circleci/openjdk:11-jdk\n    working_directory: /tmp/workspace\n    steps:\n      - checkout  # By default, checkout the entire repository\n\n      - run: mkdir -p /tmp/workspace/ticketing-project-security  # Create the project directory if it doesn't exist\n      - run: cp -r ticketing-project-security/. /tmp/workspace/ticketing-project-security/  # Copy the project contents to /tmp/workspace\n\n      - run: cd /tmp/workspace/ticketing-project-security  # Change to the project directory\n      - run: ls -a  # Debugging: List files in the project directory\n\n      # Download and cache dependencies\n      - restore_cache:\n          keys:\n            - v1-dependencies-{{ checksum \"pom.xml\" }}\n            # fallback to using the latest cache if no exact match is found\n            - v1-dependencies-\n\n      - run: mvn clean install -DskipTests\n      - save_cache:\n          paths:\n            - /tmp/workspace/ticketing-project-security/target\n          key: v1-dependencies-{{ checksum \"pom.xml\" }}\n\n      - persist_to_workspace:\n          root: /tmp/workspace\n          paths: .\n\n  docker-image-and-publish:\n    machine: true\n    steps:\n      - attach_workspace:\n          at: /tmp/workspace\n      - run: cd ticketing-project-security  # Change directory to the project with Docker config\n      - run: ls -a  # Debugging: List files in the project directory\n      - run:\n          name: Create Docker image and push to ECR\n          command: |\n            aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 576670305286.dkr.ecr.us-west-2.amazonaws.com\n            docker build -t ticketingapp .\n            docker tag ticketingapp:latest 576670305286.dkr.ecr.us-west-2.amazonaws.com/ticketingapp:latest\n            docker push 576670305286.dkr.ecr.us-west-2.amazonaws.com/ticketingapp:latest\n\n  deploy-job:\n    docker:\n      # Specify the version you desire here\n      - image: circleci/node:10.0.0\n    steps:\n      - run:\n          name: Execute Deployment Script\n          command: |\n            cd /tmp/workspace/ticketing-project-security  # Change directory to the project with Docker config\n            ssh -o \"StrictHostKeyChecking=no\" ec2-user@ec2-18-236-96-242.us-west-2.compute.amazonaws.com <<'ENDSSH'\n            /bin/bash bin/deploy_image.sh\n            docker ps\n\nworkflows:\n  version: 2\n  build_and_test:\n    jobs:\n      - build\n      - docker-image-and-publish:\n          requires:\n            - build\n      - deploy-job:\n          requires:\n            - docker-image-and-publish\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.circleci/config.yml b/.circleci/config.yml
--- a/.circleci/config.yml	
+++ b/.circleci/config.yml	
@@ -2,71 +2,14 @@
 jobs:
   build:
     docker:
-      # Specify the version you desire here
       - image: circleci/openjdk:11-jdk
-    working_directory: /tmp/workspace
     steps:
-      - checkout  # By default, checkout the entire repository
-
-      - run: mkdir -p /tmp/workspace/ticketing-project-security  # Create the project directory if it doesn't exist
-      - run: cp -r ticketing-project-security/. /tmp/workspace/ticketing-project-security/  # Copy the project contents to /tmp/workspace
-
-      - run: cd /tmp/workspace/ticketing-project-security  # Change to the project directory
-      - run: ls -a  # Debugging: List files in the project directory
-
-      # Download and cache dependencies
-      - restore_cache:
-          keys:
-            - v1-dependencies-{{ checksum "pom.xml" }}
-            # fallback to using the latest cache if no exact match is found
-            - v1-dependencies-
-
+      - checkout
       - run: mvn clean install -DskipTests
-      - save_cache:
-          paths:
-            - /tmp/workspace/ticketing-project-security/target
-          key: v1-dependencies-{{ checksum "pom.xml" }}
-
-      - persist_to_workspace:
-          root: /tmp/workspace
-          paths: .
-
-  docker-image-and-publish:
-    machine: true
-    steps:
-      - attach_workspace:
-          at: /tmp/workspace
-      - run: cd ticketing-project-security  # Change directory to the project with Docker config
-      - run: ls -a  # Debugging: List files in the project directory
-      - run:
-          name: Create Docker image and push to ECR
-          command: |
-            aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 576670305286.dkr.ecr.us-west-2.amazonaws.com
-            docker build -t ticketingapp .
-            docker tag ticketingapp:latest 576670305286.dkr.ecr.us-west-2.amazonaws.com/ticketingapp:latest
-            docker push 576670305286.dkr.ecr.us-west-2.amazonaws.com/ticketingapp:latest
-
-  deploy-job:
-    docker:
-      # Specify the version you desire here
-      - image: circleci/node:10.0.0
-    steps:
-      - run:
-          name: Execute Deployment Script
-          command: |
-            cd /tmp/workspace/ticketing-project-security  # Change directory to the project with Docker config
-            ssh -o "StrictHostKeyChecking=no" ec2-user@ec2-18-236-96-242.us-west-2.compute.amazonaws.com <<'ENDSSH'
-            /bin/bash bin/deploy_image.sh
-            docker ps
+      # Add more build steps as needed
 
 workflows:
   version: 2
   build_and_test:
     jobs:
       - build
-      - docker-image-and-publish:
-          requires:
-            - build
-      - deploy-job:
-          requires:
-            - docker-image-and-publish
